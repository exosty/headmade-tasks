Level I

Q1
Какие сторонние библиотеки вы используете чаще всего для разработки. Какие
плюсы в них вы выделяете для себя?
  
  RSpec - библиотека для тестирования кода 
  также существуют и другие, обладающие своим рядом преимуществ

Q2
При работе в команде, каким бы местам в разработке, вы бы уделили большее
внимание? Какие бы соглашения (Coding Conventions) вам бы помогли в командной
разработке?
  
  Все соглашения, от общего для проекта Code Style до определённых соглашений по работе с git, будут крайне полезны в командной разработке.

Q3
Вы когда-нибудь писали в функциональном стиле на Ruby? Если да, то какие сильные
и слабые стороны есть у данного подхода?
  
  Нет. В функциональном подходе присваивания используются не так интенсивно, как в императивном программировании, то такой код
  менее подвержен ошибкам.

Q4
Расскажите об используемых Вами фреймворках (программных каркасах). В чем их
плюсы? Для каких задач лучше использовать существующий фреймворк, а когда
лучше все написать самому?
  
  Использование фреймворков зависит от поставленных задач.
  Написать самому стоит в 2-х случаях:
  1) Поставленную задачу не удаётся решить используя фреймворк.
  2) Поставленная задача слишком "лёгкая" и использование фреймворка приведёт к ненужному функционалу и нагруженности.

Q5
Какие инструменты для профайлинга и дебага вы используете? Какие у них
минусы? Какие продукты вы использовали для профайлинга и дебага сетевых
приложений?
  
  Для отладки можно воспользоваться rails console. Профайлингом не занимался...

Q6
Какие плюсы и минусы есть у системы обработок ошибок в Ruby?

Q7
На каких языках программирования вы дополнительно пишите код?
  
  Изучал Java в прошлом.

  
