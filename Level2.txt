Level II

Q1
Объясните почему происходит следующее:
1660 / 100 ≠ 16.6
24.0 * 0.1 ≠ 2.4

  1) 1660/100 = 16, т.к. оба числа целые => целая часть от деления.
     1660.0/100 = 16.6,  т.к. одно из чисел с плавающей запятой => результат тоже с плавающей запятой.
  2) 24.0 * 0.1 ≠ 2.4
     это происходит из-за того, что тип float представляет десятичные числа в виде приближенных значений
     для решения этой проблемы можно воспользовтаься стандартной библиотекой BigDecimal, например:
       24.0 * BigDecimal("0.1") == 2.4 
       => true

Q2
Нужно написать прослойку между почтовым сервером и front-end приложением
(Flash AS3 Application). Опишите следующие моменты:

  Какой формат обмена данными вы бы использовали, для минимального трафико-обмена?
    Json.

  В чем плюсы выбранного вами формата?
    Общепринятый стандарт.

  Какие бы технологии вы использовали?
    ...

Q3
Объясните в чем разница в использовании тредов (threads) и форков (forks). В каких
случаях, какой вариант более предпочтительный для использования? Как можно
профилировать и проводить дебаг приложений с использованием тредов?
  
  Threads - потоки внутри процесса. Fork - отдельный процесс, являющийся копией родительского процесса.
  Потоки (threads) используют общее адресное пространство внутри процесса. Forks - нет.

Q4
Расскажите как можно организовать работу кода в Ruby в асинхронном режиме?
  
  С помощью потоков и сторонних библиотек, например, ActiveMQ
  
Q5
Напишите скрипт grab.rb принимающий на вход 2 параметра, например так:
./grab.rb 'www.google.com' /tmp
Скрипт должен скачать все картинки, содержащиеся на странице, указанной
первым параметром, в папку, указанную вторым параметром. Скрипт может
использовать модули, находящиеся в той же папке, что и сам скрипт.
Дополнительные условия: скрипт должен максимально загрузить доступный канал и
отрабатывать как можно быстрее.
   
  См. web-image-grabber/grab.rb

Q5
Покройте код предыдущей задачи тестами (плюсом будет использование rspec).
  
  См. web-image-grabber/spec_grab.rb
